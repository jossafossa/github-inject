// ==UserScript==
// @name         Github test
// @namespace    http://tampermonkey.net/
// @version      1746105797241
// @description  try to take over the world!
// @author       You
// @match        https://github.com/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=github.com
// @grant        none
// @downloadURL  https://raw.githubusercontent.com/jossafossa/github-inject/refs/heads/master/dist/index.js
// @updateURL    https://raw.githubusercontent.com/jossafossa/github-inject/refs/heads/master/dist/index.js
// ==/UserScript==

(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function o(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerPolicy&&(n.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?n.credentials="include":t.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(t){if(t.ep)return;t.ep=!0;const n=o(t);fetch(t.href,n)}})();const m=()=>{document.querySelectorAll("details-collapsible summary a").forEach(e=>{var o;let r=document.createElement("span");r.innerHTML=`<svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>`,r.style.marginLeft="10px",r.style.cursor="pointer",r.style.textDecoration="underline",r.addEventListener("click",function(s){s.preventDefault(),navigator.clipboard.writeText(e.textContent??"").then(()=>{console.log("Copied: "+e.textContent)}).catch(t=>{console.error("Failed to copy: ",t)})}),(o=e.parentNode)==null||o.appendChild(r)})},i="lock-merge",f=()=>{const e=document.createElement("input");e.type="checkbox",e.id="lock-merge",document.body.appendChild(e),localStorage.getItem(i)==="checked"&&(e.checked=!0),e.addEventListener("change",()=>{localStorage.setItem(i,e.checked?"checked":"unchecked")})},c=async e=>new Promise(r=>{const o=setInterval(()=>{const s=document.querySelector(e);s&&(clearInterval(o),r(s))},100)}),d=(...e)=>{console.log("%c[github-extensions]%c","color: #f0db4f; font-weight: bold; background: #323330; padding: 2px 5px; border-radius: 3px;","color: #fff; font-weight: normal; background: #323330; padding: 2px 5px; border-radius: 3px;",...e)},u=()=>{const e=document.querySelector('.gh-header-meta .commit-ref:not(:has([href*="master"]))');return e?e.textContent:!1},p=()=>{const e=document.querySelector(".partial-pull-merging-analytics-js section + div");if(!e)return{};const r=document.createElement("div");e.prepend(r),r.classList.add("fs-errors");const o=document.createElement("div");return e.prepend(o),o.classList.add("fs-messages"),{errors:r,messages:o}},h=e=>{const r=document.createElement("span");return r.classList.add("fs-message"),r.innerHTML=e,r},g=()=>{const e=u();if(e)return h(`<a href='https://github.com/simplicate-software/frontend/actions?query=branch:${e}'>Actions of this PR</a>`)},b=()=>{const{messages:e}=p();if(!e)return;const r=g();r&&e.append(r)},v=()=>{b()},y=()=>document.querySelector(".gh-header-meta [title='Status: Merged']")?"merged":document.querySelector("[reviewable_state='draft']")?"draft":document.querySelector("[data-name*='QA-Test'], [data-name*='qa-test']")?"test":!1,w=()=>{let e=!1;const r=setInterval(()=>{const o=y();if(e!==o&&o){const s=`[${o.toUpperCase()}]`;e=!!o;const t=document.querySelector("h1 > bdi");t&&(t.innerHTML=`${s} ${t.innerHTML}`),document.title=`${s} ${document.title}`,clearInterval(r)}},1e3)},x=':root{--f-merge: #8957e5;--f-merge-border: #8957e5;--f-error: rgb(231, 12, 8);--f-error-border: rgb(109 27 26);--f-warning: rgb(236, 164, 6);--f-warning-border: rgb(210 153 34);--f-positive: #238636;--f-positive-border: #21672e;--f-info: #4493f8;--f-info-border: #1f3356}.review-thread-component{--comment-outline-color: var(--f-error-border);outline:2px solid var(--comment-outline-color);opacity:var(--comment-opacity);border:none!important}.js-comment-container:hover{opacity:1}:where(.review-thread-component:has(.js-comments-holder>div:nth-last-child(1) img[src*="175005199"])){--comment-outline: 2px solid var(--f-warning-border);transition:.15s ease}:where(.review-thread-component:has(.js-comments-holder>div:nth-last-child(1) img[src*="175005199"]):has(.js-comments-holder>div:nth-last-child(1) .commit-link,[href*="/compare/"])){--comment-outline-color: var(--f-positive-border);--comment-opacity: .5}.review-thread-component[data-resolved=true]{--comment-outline-color: var(--f-positive-border)}[reviewable_state=draft]{outline:1rem solid var(--f-merge)}body{--body-color: transparent;border-left:1rem solid var(--body-color)!important}body:has(.discussion-sidebar-item [data-name*=QA-Test],.discussion-sidebar-item[data-name*=qa-test]){--body-color: var(--f-warning)}body:has(.author[href*=vandergeest]){--body-color: var(--f-positive)}body:has([reviewable_state=draft]){--body-color: var(--f-error)}body:has(.merge-status-item .color-fg-danger){--body-color: var(--f-error)}relative-time:after{font-size:70%;content:" " attr(datetime);font-weight:700;opacity:.5}.Layout-sidebar{resize:horizontal}.js-issue-row:has([aria-label*=Draft],[href*=dependabot]):not(:hover){opacity:.4}#discussion_bucket:has(.TimelineItem:nth-child(1):has([alt*=joosthobma])) .merge-message .BtnGroup:not(:hover){opacity:.2;cursor:not-allowed}#lock-merge{position:fixed;bottom:0;right:0;z-index:999}.fs-messages:before,.fs-errors:before,.fs-error,.fs-message{--background: var(--f-info-border);--border: var(--f-info);content:var(--message);padding:8px;background-color:var(--background);color:#fff;border-radius:4px;margin-bottom:1rem;display:flex;border-left:8px solid var(--border)}:where(.fs-message,.fs-error) a{color:inherit;text-decoration:underline}.fs-errors:before,.fs-error{content:var(--error);--background: var(--f-error-border);--border: var(--f-error)}body:has(#lock-merge:checked){--error: "Merging is blocked"}body:has([title*="fixup!"]){--error: "Please rebase fixups before merging"}body:has(.fs-error) .fs-errors+div{cursor:not-allowed}body:has(.fs-error) .fs-errors+div [class*=prc-Button-ButtonBase]{opacity:.2;pointer-events:none}@container style(--error){body .fs-errors+div{cursor:not-allowed}body .fs-errors+div [class*=prc-Button-ButtonBase]{opacity:.2;pointer-events:none}}body:not(body:has(.js-discussion>.TimelineItem:nth-child(1) [alt*=joosthobma])){--error: "This is not your PR to merge!"}',l=document.createElement("style");l.innerHTML=x;document.head.appendChild(l);const L=async()=>{d("github loaded"),f(),w(),m()};c(".timeline-comment-group").then(L);const k=async()=>{d("pipeline loaded"),v()};c("[class*='MergeBoxSectionHeader-module__wrapper']").then(k);
