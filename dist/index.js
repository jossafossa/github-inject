// ==UserScript==
// @name         Github test
// @namespace    http://tampermonkey.net/
// @version      1746104722275
// @description  try to take over the world!
// @author       You
// @match        https://github.com/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=github.com
// @grant        none
// @downloadURL  https://raw.githubusercontent.com/jossafossa/github-inject/refs/heads/master/dist/index.js
// @updateURL    https://raw.githubusercontent.com/jossafossa/github-inject/refs/heads/master/dist/index.js
// ==/UserScript==

(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))c(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&c(s)}).observe(document,{childList:!0,subtree:!0});function o(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function c(n){if(n.ep)return;n.ep=!0;const r=o(n);fetch(n.href,r)}})();const l=()=>{document.querySelectorAll("details-collapsible summary a").forEach(e=>{var o;let t=document.createElement("span");t.innerHTML=`<svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>`,t.style.marginLeft="10px",t.style.cursor="pointer",t.style.textDecoration="underline",t.addEventListener("click",function(c){c.preventDefault(),navigator.clipboard.writeText(e.textContent??"").then(()=>{console.log("Copied: "+e.textContent)}).catch(n=>{console.error("Failed to copy: ",n)})}),(o=e.parentNode)==null||o.appendChild(t)})},a="lock-merge",u=()=>{const e=document.createElement("input");e.type="checkbox",e.id="lock-merge",document.body.appendChild(e),localStorage.getItem(a)==="checked"&&(e.checked=!0),e.addEventListener("change",()=>{localStorage.setItem(a,e.checked?"checked":"unchecked")})},i=async e=>new Promise(t=>{const o=setInterval(()=>{const c=document.querySelector(e);c&&(clearInterval(o),t(c))},100)}),d=(...e)=>{console.log("%c[github-extensions]%c","color: #f0db4f; font-weight: bold; background: #323330; padding: 2px 5px; border-radius: 3px;","color: #fff; font-weight: normal; background: #323330; padding: 2px 5px; border-radius: 3px;",...e)},p=()=>{const e=document.querySelector('.gh-header-meta .commit-ref:not(:has([href*="master"]))');return e?e.textContent:!1},m=()=>{const e=document.querySelector(".partial-pull-merging-analytics-js section + div");if(!e)return{};const t=document.createElement("div");e.prepend(t),t.classList.add("fs-errors");const o=document.createElement("div");return e.prepend(o),o.classList.add("fs-messages"),{errors:t,messages:o}},f=e=>{const t=document.createElement("span");return t.classList.add("fs-message"),t.innerHTML=e,t},h=()=>{const e=p();if(e)return f(`<a href='https://github.com/simplicate-software/frontend/actions?query=branch:${e}'>Actions of this PR</a>`)},g=()=>{const{messages:e}=m();if(!e)return;const t=h();t&&e.append(t)},y=()=>{g()},v=()=>document.querySelector(".gh-header-meta [title='Status: Merged']")?"merged":document.querySelector("[reviewable_state='draft']")?"draft":document.querySelector("[data-name*='QA-Test'], [data-name*='qa-test']")?"test":!1,b=()=>{let e=!1;const t=setInterval(()=>{const o=v();if(e!==o&&o){const c=`[${o.toUpperCase()}]`;e=!!o;const n=document.querySelector("h1 > bdi");n&&(n.innerHTML=`${c} ${n.innerHTML}`),document.title=`${c} ${document.title}`,clearInterval(t)}},1e3)},L=async()=>{d("github loaded"),u(),b(),l()};i(".timeline-comment-group").then(L);const x=async()=>{d("pipeline loaded"),y()};i("[class*='MergeBoxSectionHeader-module__wrapper']").then(x);
