/*
Comments:
- outline:red = not responded
- outline:orange = responded
- outline:green = responded with commit

page: 
- border:red = change requested
- border:orange = status:test
- border:green = tested
*/

:root {
  --f-purple: rgb(167, 48, 161);
  --f-red: rgb(231, 12, 8);
  --f-orange: rgb(236, 164, 6);
  --f-green: rgb(21, 194, 56);
  --f-purple-border: rgb(141, 78, 138);
  --f-red-border: rgb(168, 43, 41);
  --f-orange-border: rgb(210 153 34);
  --f-green-border: rgb(35 134 54);
}

/* 
-- OUTLINE COMMENTS --
 */

/* configure an outline for comments */
.review-thread-component {
  --comment-outline-color: var(--f-red-border);
  outline: 2px solid var(--comment-outline-color);
  opacity: var(--comment-opacity);
  border: none !important;
}

/* always show the comment   */
.js-comment-container:hover {
  opacity: 1;
}

/* set the comment to orange when I commented last */
:where(
    .review-thread-component:has(
        .js-comments-holder > div:nth-last-child(1) img[src*="175005199"]
      )
  ) {
  --comment-outline: 2px solid var(--f-orange-border);
  transition: 0.15s ease;
}

/* gray out the comment and mark it green when i commented last with a commit hash */
:where(
    .review-thread-component:has(
        .js-comments-holder > div:nth-last-child(1) img[src*="175005199"]
      ):has(
        .js-comments-holder > div:nth-last-child(1) .commit-link,
        [href*="/compare/"]
      )
  ) {
  --comment-outline-color: var(--f-green-border);
  --comment-opacity: 0.5;
}

.review-thread-component[data-resolved="true"] {
  --comment-outline-color: var(--f-green-border);
}

/* 
-- DRAFT BUTTON COLOR --
*/

/* outline the tag button with red */
[reviewable_state="draft"] {
  outline: 1rem solid var(--f-purple);
}

/* 
-- BODY BORDER COLOR --
*/

body {
  --body-color: transparent;
  border-left: 1rem solid var(--body-color) !important;
}

/* The body color is orange. when a tag with qa-test is applied */
body:has(
    .discussion-sidebar-item [data-name*="QA-Test"],
    .discussion-sidebar-item[data-name*="qa-test"]
  ) {
  --body-color: var(--f-orange);
}

/* The body color is green when a tester left a comment  */
body:has(.author[href*="vandergeest"]) {
  --body-color: var(--f-green);
}

/* The body color is red when the PR is in draft */
body:has([reviewable_state="draft"]) {
  --body-color: var(--f-red);
}

/* The body color is red when the PR has pipeline issues */
body:has(.merge-status-item .color-fg-danger) {
  --body-color: var(--f-red);
}

/* 
-- EXTRA QUALITY OF LIFE CHANGES --
 */

/* add absolute time */
relative-time:after {
  font-size: 70%;
  content: " " attr(datetime);
  font-weight: bold;
  opacity: 0.5;
}

/* resize the sidebar */
.Layout-sidebar {
  resize: horizontal;
}

/* hide draftS IN PR List */
.js-issue-row:has([aria-label*="Draft"], [href*="dependabot"]):not(:hover) {
  opacity: 0.4;
}

/* disable the merge button for PR that are not from me */
#discussion_bucket:has(.TimelineItem:nth-child(1):has([alt*="joosthobma"]))
  .merge-message
  .BtnGroup:not(:hover) {
  opacity: 0.2;
  cursor: not-allowed;
}

/* 
-- LOCK MERGE --
 */
#lock-merge {
  position: fixed;
  bottom: 0;
  right: 0;
  z-index: 999;
}

/*
-- MESSAGES --
*/

.fs-messages:before,
.fs-errors:before,
.fs-error,
.fs-message {
  content: var(--message);
  padding: 8px;
  background-color: var(--f-orange-border);
  color: white;
  border-radius: 4px;
  margin-bottom: 1rem;
  display: flex;
}

.fs-errors:before,
.fs-error {
  content: var(--error);
  background-color: var(--f-red-border);
}

body:has(#lock-merge:checked) {
  --error: "Merging is blocked";
}

body:has([title*="fixup!"]) {
  --error: "Please rebase fixups before merging";
}

body:has(#lock-merge:checked),
body:has([title*="fixup!"]) {
  .partial-pull-merging-analytics-js
    section
    + div
    [class*="prc-Button-ButtonBase"] {
    opacity: 0.2;
    pointer-events: none;
  }
}

body:not(
    body:has(.js-discussion > .TimelineItem:nth-child(1) [alt*="joosthobma"])
  ) {
  --error: "This is not your PR to merge!";
}
